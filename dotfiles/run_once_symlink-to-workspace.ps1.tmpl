# Define variables
$chezmoiPath = "$env:USERPROFILE\.local\share\chezmoi"
$destinationBasePath = "C:\Workspace"

# Ensure the chezmoi directory exists
if (-Not (Test-Path -Path $chezmoiPath)) {
    Write-Error "The specified chezmoi directory does not exist: $chezmoiPath"
    exit 1
}

# Path to the .git/config file
$gitConfigPath = Join-Path -Path $chezmoiPath -ChildPath ".git\config"

# Ensure the .git/config file exists
if (-Not (Test-Path -Path $gitConfigPath)) {
    Write-Error "The .git/config file does not exist in the specified directory: $gitConfigPath"
    exit 1
}

# Read the remote URL from the git config
$remoteUrl = Select-String -Path $gitConfigPath -Pattern "url = " | ForEach-Object {
    $_.Line -replace "url = ", ""
}

# Extract the repository name from the remote URL
if ($remoteUrl -match "/([^/]+)\.git$") {
    $repositoryName = $matches[1]
} else {
    Write-Error "Could not extract the repository name from the remote URL: $remoteUrl"
    exit 1
}

# Define the destination path
$destinationPath = Join-Path -Path $destinationBasePath -ChildPath $repositoryName

# Create the symbolic link
try {
    New-Item -Path $destinationPath -ItemType SymbolicLink -Value $chezmoiPath -Force
    Write-Host "Symbolic link created successfully:"
    Write-Host "`t$destinationPath -> $chezmoiPath"
} catch {
    Write-Error "Failed to create the symbolic link: $_"
    exit 1
}