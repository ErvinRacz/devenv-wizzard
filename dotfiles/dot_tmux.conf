set -g status-keys emacs

set -g default-terminal "${TERM}"

bind r source-file ~/.tmux.conf

# Appearance
# statusbar
set -g status-position top
set -g status-justify left
set -g status-style 'fg=red'

set -g status-left ''
set -g status-left-length 10

set -g status-right-style 'fg=black bg=yellow'
set -g status-right '%Y-%m-%d %H:%M '
set -g status-right-length 50

setw -g window-status-current-style 'fg=black bg=red'
setw -g window-status-current-format ' #I #W #F '

setw -g window-status-style 'fg=red bg=black'
setw -g window-status-format ' #I #[fg=white]#W #[fg=yellow]#F '

setw -g window-status-bell-style 'fg=yellow bg=red bold'

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

bind -r f run-shell "sh ~/.local/bin/open-new-tmux-window.sh NewSession ~/.local/bin/tmux-sessionizer.sh"
bind -n C-n run-shell "tmux display-message -p '#{pane_current_command}' | grep -iq 'nvim' && tmux send-keys C-n || tmux send-keys 'nvim .' Enter"
bind -n C-t run-shell "tmux display-message -p '#{pane_current_command}' | grep -iq 'nvim' && tmux send-keys C-t || tmux new-window -c '#{pane_current_path}'"

# To jump back to a nvim window
bind -n C-S-t run-shell "bash tmux-set-last-window-for-nvim.sh ; tmux select-window -t $(bash tmux-find-nvim-window.sh)"

# Switch through windows with C-Tab only if we are not running nvim
bind -n C-Tab run-shell "tmux display-message -p '#{pane_current_command}' | grep -iq 'nvim' && tmux send-keys C-Tab || $(bash tmux-set-last-window-for-nvim.sh ; tmux next-window)"
bind -n C-S-Tab run-shell "tmux display-message -p '#{pane_current_command}' | grep -iq 'nvim' && tmux send-keys C-S-Tab || $(bash tmux-set-last-window-for-nvim.sh ; tmux previous-window)"

bind -n C-S-f send-keys C-S-f

# Example how to launch a project with a key combination
bind -r g send-keys "sh ~/.local/bin/tmux-sessionizer.sh ~/Workspace/os-as-ide" Enter
